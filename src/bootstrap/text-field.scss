@use "./settings.scss";
@use "bootstrap/scss/forms/form-text" as *;
@use "bootstrap/scss/forms/labels" as *;
@use "bootstrap/scss/forms/form-control" as *;
@use "bootstrap/scss/forms/input-group" as *;
@use "bootstrap/scss/grid" as *;
@use "bootstrap/scss/variables/input-padding-y" as *;
@use "bootstrap/scss/variables/input-padding-x" as *;
@use "bootstrap/scss/variables/input-padding-y-sm" as *;
@use "bootstrap/scss/variables/input-padding-x-sm" as *;
@use "bootstrap/scss/variables/input-padding-y-lg" as *;
@use "bootstrap/scss/variables/input-padding-x-lg" as *;
@use "bootstrap/scss/variables/input-font-family" as *;
@use "bootstrap/scss/variables/input-border-width" as *;
@use "bootstrap/scss/variables/spinner-width" as *;
@use "bootstrap/scss/variables/spinner-width-sm" as *;

.form-text-container {
    position: relative;

    &:not(.form-text-container-inline) {
        flex-direction: column;
        display: grid;
        grid-template-rows: auto auto;
    }

    &.form-text-container-inline {
        align-items: center;
    }


    &.form-text-container-sm, &.form-text-container-md {
        --spinner-padding: calc(#{$spinner-width-sm} + var(--input-padding-x));
    }
    --spinner-padding: calc(#{$spinner-width} + var(--input-padding-x));

    &.form-text-container-no-spinner-padding {
        --spinner-padding: 0em;
    }

    &>.form-label, &>.col-auto>.form-label {
        cursor: pointer;
    }
}

.form-control {
    padding-inline-start: var(--input-padding-x);
    padding-inline-end: calc(var(--input-padding-x));
    transition: padding ease-in-out 0.15s;
    position: relative;

    &-sm {
        --input-padding-y: #{$input-padding-y-sm};
        --input-padding-x: #{$input-padding-x-sm};
    }

    &-md {
        --input-padding-y: #{$input-padding-y};
        --input-padding-x: #{$input-padding-x};
    }

    &-lg {
        --input-padding-y: #{$input-padding-y-lg};
        --input-padding-x: #{$input-padding-x-lg};
    }

    &:focus {
        z-index: 1;
    }

    &.form-control-measure {
        position: absolute;
        opacity: 0;
        pointer-events: none;
        display: inline-block;
        width: auto;
        padding: 0 !important;
        border: 0 !important;
        margin: 0 !important;
        white-space: pre;
        visibility: hidden;
    }

    &.form-control-explicit-width {
        width: calc((var(--form-control-explicit-width) * var(--form-width-unit)) + (2 * var(--input-padding-x)) + (2 * #{$input-border-width}) + var(--spinner-padding, 0));
    }

    // Ensure there's always room for a spinner at the end
    &.form-control-sm,
    &.form-control-md,
    &.form-control-lg {
        padding-inline-start: var(--input-padding-x);
        padding-inline-end: calc(var(--input-padding-x));

        &.pending {
            padding-inline-end: calc(var(--input-padding-x) + var(--spinner-padding, 0));
        }
    }

    &.form-control-explicit-width-ch {
        --form-width-unit: 1ch;
    }

    &.form-control-explicit-width-ic {
        --form-width-unit: 1ic;
    }

    &.form-control-explicit-width-em {
        --form-width-unit: 1em;
    }

    &.form-control-explicit-width-px {
        --form-width-unit: 1px;
    }
}

.form-text-container>.spinner,
.form-text-container>.col-auto>.spinner,
.form-text-container>.form-text-container-spinner-container>.spinner {
    position: absolute;
    bottom: var(--input-padding-y);
    top: var(--input-padding-y);
    right: var(--input-padding-x);
    pointer-events: none;
    z-index: 2;
    /* top: 0; */
}